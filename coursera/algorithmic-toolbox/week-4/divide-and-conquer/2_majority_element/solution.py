# python3
from collections import namedtuple
from functools import reduce
from random import randint
from sys import stdin
from typing import List
from unittest import TestCase

test = namedtuple('test', 'votes expected')


def majority_element(votes: List[int], left: int, right: int) -> (int, int):
    if left == right:
        return -1, 0
    if left + 1 == right:
        return votes[left], 1

    control = (right - left) // 2
    middle = (left + right) // 2

    ml, cl = majority_element(votes, left, middle)
    if ml != -1:
        cl += reduce(lambda count, x: count if x != ml else count + 1, votes[middle:right], 0)
        if cl > control:
            return ml, cl

    mr, cr = majority_element(votes, middle, right)
    if mr != -1:
        cr += reduce(lambda count, x: count if x != mr else count + 1, votes[left:middle], 0)
        if cr > control:
            return mr, cr

    return -1, 0


def majority_element_control(votes: List[int], left: int, right: int) -> (int, int):
    distribution = {}

    for vote in votes[left:right]:
        if vote in distribution:
            distribution[vote] += 1
            continue
        distribution[vote] = 1

    control = (right - left) // 2
    for vote, count in distribution.items():
        if count > control:
            return vote, count

    return -1, 0


class Test(TestCase):
    def test_majority_element(self):
        tests = [
            # samples
            test([2, 3, 9, 2, 2], (2, 3)),
            test([1, 2, 3, 4], (-1, 0)),
            test([1, 2, 3, 1], (-1, 0)),

            # acceptance
            test([512766168, 717383758, 5, 126144732, 5, 573799007, 5, 5, 5, 405079772], (-1, 0)),

            # additional
            test([1, 2, 2, 2, 2, 1], (2, 4)),
            test([1, 2, 2, 2, 1], (2, 3)),
            test([2, 2, 1, 1, 2, 2], (2, 4)),
            test([2, 2, 1, 2, 2], (2, 4)),
            test([1, 1, 1, 1, 1], (1, 5)),
            test([1, 2, 2, 1], (-1, 0)),
            test([1, 1, 1, 1], (1, 4)),
            test([1], (1, 1)),
            test([0], (0, 1)),

            # stress
            test([969581052, 790239767, 680912469, 681591980, 281418665, 516670261, 378660473, 710293630, 463401508,
                  285778955, 13293049, 996093489, 305379892, 426044114, 112221329, 25816439, 338005430, 535362344,
                  407509359, 329823616, 868502734, 689849157, 254711478, 430672482, 771910960, 614447452, 840243529,
                  452407521, 543779966, 645453776, 344814825, 598237410, 179276388, 195246981, 45455680, 319768795,
                  783388290, 93967750, 616195748, 740577106, 437038614, 983677009, 698034530, 784683976, 869216771,
                  376670126, 569307330, 801917267, 361355994, 802461350, 264119332, 355021130, 20913797, 250512165,
                  153130400, 20134625, 901841463, 345517360, 227886571, 427824169, 301231359, 588916941, 756471987,
                  626951712, 112151216, 372343660, 349481211, 821122436, 533676688, 577261576, 24280139, 355267199,
                  117562037, 970597921, 607134141, 711714495, 934417150, 460221209, 739626929, 623150310, 249841294,
                  337126892, 253498310, 412311482, 973355521, 836437091, 935650590, 132997047, 614875838, 514647084,
                  699830561, 639193327, 55423248, 551563041, 132002678, 952620243, 804010626, 870662579, 568805950,
                  494274899, 898782051, 428160266, 812340461, 359183358, 500885554, 66922494, 72229991, 322120319,
                  129783445, 387534692, 228126697, 368402185, 483876134, 941531640, 408780943, 947107095, 198659007,
                  195585046, 367971871, 87727419, 356913465, 396392991, 558285941, 370722008, 983683646, 804727414,
                  64072126, 805569057, 475835839, 916326114, 935539326, 666221858, 646548226, 887888125, 32461089,
                  224947240, 320409459, 451600173, 85430763, 971748435, 890313788, 352034899, 508437874, 32184831,
                  991991056, 20750357, 843739900, 923241593, 283826993, 923368659, 580699912, 725060829, 994063423,
                  110553763, 856363823, 984755067, 875601934, 761620645, 197977149, 219901615, 291100129, 396210070,
                  554308586, 209057740, 109887127, 664917761, 670711154, 190339483, 855771736, 836402431, 141357251,
                  365967102, 483048277, 175096152, 779612598, 269339087, 608777287, 609978637, 207505865, 681601838,
                  598382625, 805555203, 855201390, 829726285, 768698651, 459589722, 182405988, 193228972, 415049597,
                  757901127, 350877328, 52138706, 888036046, 283784404, 920103655, 5051175, 9091727, 347034972,
                  992534423, 73722068, 230784891, 228037129, 881438229, 283672640, 196675807, 538011616, 188457839,
                  199241998, 977311285, 448786543, 334472549, 144149735, 480416178, 91694028, 269379295, 604241422,
                  948926511, 776082164, 771254024, 903900910, 927409698, 649259187, 438299676, 630472084, 652426862,
                  383211487, 379624397, 979640808, 219700512, 72462851, 820200595, 749394323, 444114028, 57649067,
                  126241175, 823536056, 291079709, 818075506, 7642070, 960047430, 360845200, 743233153, 569842359,
                  632744102, 539488633, 364405562, 894040937, 188092992, 677533478, 324962432, 93459329, 41129569,
                  775869974, 835238876, 330049765, 95171428, 43047667, 393538283, 855933751, 311239144, 840667313,
                  882649785, 431638424, 955362240, 63439548, 165229249, 423682839, 160180638, 864667051, 465144279,
                  158399826, 336945044, 150357277, 719355034, 981908590, 436473501, 988468098, 838935586, 433617186,
                  486952355, 434704704, 246772110, 814874538, 369874439, 362122433, 668813665, 327785482, 707929012,
                  559327468, 290137102, 679669249, 923461519, 540117319, 777790715, 37719234, 665173028, 649973628,
                  816136192, 809815750, 557620098, 914477482, 264568659, 516665519, 522631138, 545318159, 66050989,
                  513324207, 190321254, 310217035, 222321434, 984996773, 222442661, 662636358, 453889973, 391103709,
                  767216734, 794689979, 405343361, 799709455, 673534340, 109453403, 277378875, 594619212, 246626397,
                  377952404, 890908857, 328434398, 976810735, 269044062, 690371538, 665776193, 218461133, 598005536,
                  117462791, 780179595, 803152920, 120949926, 110022845, 208782631, 373211023, 218151726, 499849824,
                  592191089, 13950257, 412088527, 535525528, 436321086, 775054615, 430461897, 188029033, 630763121,
                  314500069, 822289195, 619664073, 862153505, 497853260, 174896670, 239274779, 598815173, 118176849,
                  252238086, 630960414, 130232487, 389091139, 754563587, 736051842, 568001267, 161795668, 638403723,
                  432545685, 723775542, 124607693, 105128924, 420123242, 915096313, 998659570, 98268893, 695352467,
                  457324600, 509395319, 505705537, 116150589, 558005979, 316078901, 708369249, 40416703, 37624876,
                  342061743, 543817973, 284998657, 473934753, 376593099, 523427987, 231765126, 270811643, 822117531,
                  494124816, 433823014, 26927396, 725711069, 502279537, 310112353, 477015153, 398031241, 154559457,
                  242529891, 269770201, 267681072, 979456118, 19028569, 582014735, 629924650, 304254326, 866633154,
                  331902869, 997066843, 957671698, 298840780, 605854167, 664481093, 456743068, 257655375, 324291008,
                  118343530, 47389184, 279155748, 775446414, 585797834, 167399200, 571824496, 667235419, 794889816,
                  348837332, 252852224, 879750825, 574177155, 107752650, 959274414, 582585642, 359228503, 294363454,
                  679540824, 637230306, 422451814, 565284481, 141135021, 700443587, 62955467, 799087828, 319410114,
                  819076060, 807525781, 162413370, 801114967, 555893176, 500090217, 200310226, 668988143, 957875719,
                  757451609, 569884436, 835364855, 811343929, 323660452, 772731246, 466778103, 187713405, 499863598,
                  703066516, 610751606, 47296458, 508033287, 169229416, 521582643, 118406659, 158776714, 307658015,
                  88383923, 697216897, 539653276, 966008494, 336406533, 455519643, 846080289, 898063920, 304223529,
                  505121005, 729788483, 688710538, 332691737, 229796217, 262113611, 900684476, 773687061, 552463105,
                  549293193, 100267723, 441117691, 291198286, 519122461, 387075195, 133536160, 168602046, 246133804,
                  683430104, 207998253, 389469540, 76467635, 519064847, 43603731, 670067576, 224784386, 981281834,
                  773247935, 485948559, 403985600, 414161448, 721801383, 115403946, 936231500, 663510547, 167145269,
                  972008495, 563926121, 147680968, 487505456, 47162147, 205492186, 553846273, 410448569, 337133441,
                  123627282, 126393405, 559831770, 953562687, 112607445, 300051720, 34430525, 82015832, 293649560,
                  349167511, 278860996, 12380247, 227241728, 418743772, 836896942, 937138800, 533108927, 493021198,
                  508078053, 939627494, 321502053, 86436859, 996175309, 209420874, 56845490, 906567186, 616080177,
                  155622208, 337260689, 771868784, 550383803, 450319144, 941441853, 948104380, 719187300, 642982245,
                  652077236, 352381809, 41054007, 775381983, 309756163, 470573783, 270245473, 509662868, 941177559,
                  651576438, 823768306, 846604044, 431340998, 91465160, 360167551, 739832663, 553434758, 102006054,
                  251234356, 183028431, 361313959, 89192804, 22937021, 787814212, 550580722, 44518340, 753348494,
                  486484216, 868039176, 843596257, 332726842, 582380131, 376117348, 98780383, 21512760, 551823914,
                  299333896, 90816161, 783734164, 859060517, 318388819, 13179167, 973585123, 706727831, 396551631,
                  799938530, 37527093, 577268790, 161016215, 848199466, 921804247, 795048455, 464456, 331470830,
                  11285472, 317320174, 742747951, 210671230, 61686594, 147185514, 577066870, 557909054, 102812336,
                  249520418, 421484055, 327910692, 562576992, 934134721, 808254362, 584742079, 89166095, 571968004,
                  157352835, 622046195, 869129660, 500020876, 469183036, 510359235, 798599764, 443385288, 571206610,
                  773401854, 664050217, 368805995, 642872821, 585318280, 606683775, 662319984, 463585116, 403544,
                  434609945, 139211758, 165534543, 364582689, 1619536, 634898227, 407783140, 813000984, 386771761,
                  276172669, 297967899, 464177604, 887951523, 226461342, 829069527, 740185686, 215263162, 828669907,
                  42786316, 491455232, 149156903, 545920697, 234720838, 175843783, 195332844, 725989298, 362627011,
                  634610928, 413770250, 45289945, 5473142, 200271830, 686707692, 924245339, 875935152, 475067998,
                  539207073, 243994878, 204159317, 796583450, 985850810, 404297303, 19897434, 9583799, 500336121,
                  208002727, 179541035, 283396603, 511229637, 883348890, 259063068, 579912120, 721594342, 139583862,
                  512399006, 679538442, 673775307, 268473100, 311499712, 249748303, 766342335, 121276541, 953859831,
                  394698795, 70146132, 930941023, 401833903, 760902269, 412232381, 821208626, 269145787, 472933903,
                  527599441, 624951920, 706138510, 230039324, 203548635, 877762109, 732557251, 336738045, 5803196,
                  41339302, 723875780, 213574308, 808562388, 532933467, 266126814, 67669776, 912878695, 880523585,
                  794993427, 297817069, 613539098, 139312557, 890508299, 626776222, 295594297, 625334062, 178731281,
                  890180323, 781039672, 14800645, 835676341, 959429410, 440955227, 315939870, 442345562, 834926883,
                  116982184, 159098576, 121933332, 875329692, 627492221, 612397293, 609841768, 877367835, 851633748,
                  917533745, 823051371, 276576240, 23588623, 179456780, 881165545, 731189373, 351408643], (-1, 0))
        ]
        for i, t in enumerate(tests):
            self.assertEqual(t.expected, majority_element(t.votes, 0, len(t.votes)), msg='at {} position'.format(i))

    def test_stress(self):
        while True:
            votes = []
            count = randint(1, pow(10, 5))
            for i in range(count):
                votes.append(randint(0, pow(10, 9)))

            try:
                expected = majority_element_control(votes, 0, len(votes))
                obtained = majority_element(votes, 0, len(votes))
                if expected != obtained:
                    self.fail(msg='failed on input {}'.format(votes))
            except RecursionError as e:
                self.fail(msg='failed on input {} with error {}'.format(votes, e))


if __name__ == '__main__':
    n, *a = list(map(int, stdin.read().split()))
    print(0 if majority_element(a, 0, n)[0] == -1 else 1)
